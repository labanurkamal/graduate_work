version: '3'
services:

  movies_db:
    image: postgres:16
    container_name: movies_db
    env_file:
      - .env
    volumes:
      - ./postgres/database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  elasticsearch:
    image: docker.io/elastic/elasticsearch:8.15.1
    container_name: elasticsearch
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: "false"
      USE_SSL: "false"
    volumes:
      - es-volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=5s" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: redis
    env_file:
      - .env
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-volume:/data

  assistant_app:
#    image: labamoon/assistant_backend
    build:
      context: ..
      dockerfile: deploy/graduate_service/Dockerfile
    container_name: assistant_app
    ports:
    - "8000:8000"
    env_file:
      - .env
    depends_on:
      movies_db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://assistant_app:8000/api/v1/healthcheck/"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot-etc:/etc/letsencrypt
      - ./nginx/certbot-www:/var/www/certbot
    depends_on:
      - assistant_app
    ports:
      - "80:80"
      - "443:443"

volumes:
  static_volume:
  redis-volume:
  es-volume:
