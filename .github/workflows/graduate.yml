name: Main Graduate workflow

on:
  push:
    branches:
      - main


jobs:
  assistant_app_test:
    name: Проверьте тест на приложение Ассистент
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9,]

    steps:
      - name: Загрузка из репозитория
        uses: actions/checkout@v3

      - name: Установите Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Устанавливать зависимости
        run: |
          python -m pip install --upgrade pip
          pip install flake8==6.0.0
          pip install -r ./assistant/requirements.txt
          pip install -r ./assistant/tests/funct/requirements.txt

      - name: Тестирования на flake8
        run: python -m flake8 assistant/ --verbose

      - name: Копировать .env.example в .env
        run: cp $GITHUB_WORKSPACE/deploy/.env.example $GITHUB_WORKSPACE/deploy/.env

      - name: Запуск docker-compose
        run: docker compose -f deploy/docker-compose.yml up --build -d --remove-orphans

      - name: Ожидание готовности сервисов
        run: |
          echo "Ждем готовности базы данных..."
          while ! docker exec movies_db pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"; do
            sleep 5
          done
          
          echo "Ждем готовности Elasticsearch..."
          while ! curl -fsSL "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"; do
            sleep 10
          done
           
          echo "Ждем готовности приложения..."
          until curl -f "http://localhost:8000/api/v1/healthcheck/"; do
            sleep 10
          done
          
      - name: Тестирования приложение Ассистент
        run: pytest -v $GITHUB_WORKSPACE/assistant/tests/funct/src

  build_and_push_to_docker_hub:
    name: Сборка и пуш Docker-образа
    runs-on: ubuntu-latest
    needs:
      - assistant_app_test
    steps:
      - name: Загрузка из репозитория
        uses: actions/checkout@v3

      - name: Установка Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Вход в Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Сборка и пуш Docker-образа
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deploy/graduate_service/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/assistant_backend:latest

  deploy:
    name: Деплой продукта
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub

    steps:
      - name: Загрузка кода из репозитория
        uses: actions/checkout@v2

      - name: Копирование docker-compose.yml на сервер
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_LOGIN }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy"
          target: 'graduate_work'

      - name: Выполнение команд на сервере
        uses: appleboy/ssh-action@master

        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_LOGIN }}
          key: ${{ secrets.SSH_KEY }}

          scripts: |
            cd graduate_work/deploy
            sudo docker system prune -af
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d