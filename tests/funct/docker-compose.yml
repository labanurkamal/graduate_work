version: '3'

services:

  fastapi:
    build: ../../.
    image: fastapi-image
    ports:
      - "8000:8000"
    env_file:
      - .env.test

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ../../nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fastapi
    ports:
      - "80:80"

  test_app:
    image: fastapi-image
    env_file:
      - .env.test
    environment:
      - PYTHONPATH=/opt/app/
    entrypoint: >
      sh -c "pip install --no-cache-dir -r /opt/app/tests/funct/requirements.txt
      && python3 /opt/app/tests/funct/utils/wait_for_es.py
      && python3 /opt/app/tests/funct/utils/wait_for_redis.py
      && pytest -vv /opt/app/tests/funct/src"
    depends_on:
      - fastapi

  elasticsearch:
    image: docker.io/elastic/elasticsearch:8.15.1
    env_file:
      - ../../.env
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: "false"
      USE_SSL: "false"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200/_cluster/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
     image: redis:7.0.2-alpine
     env_file:
       - ./.env.test
     restart: always
     ports:
       - "6379:6379"
     command: redis-server --save 20 1 --loglevel warning --requirepass secret
     volumes:
       - redis-storage:/data

volumes:
   redis-storage:
   esdata:
